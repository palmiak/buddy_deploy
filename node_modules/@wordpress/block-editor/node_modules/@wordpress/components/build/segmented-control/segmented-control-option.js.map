{"version":3,"sources":["@wordpress/components/src/segmented-control/segmented-control-option.tsx"],"names":["getShowSeparator","segmentedControlContext","index","currentId","items","isLast","length","isActive","id","isNextActive","showSeparator","SegmentedControlOption","props","forwardedRef","baseId","buttonProps","findIndex","item"],"mappings":";;;;;;;;;;;;;AAIA;;AAKA;;AAKA;;AAKA;;AAnBA;AACA;AACA;;AAIA;AACA;AACA;AAaA,SAASA,gBAAT,CACCC,uBADD,EAECC,KAFD,EAGE;AAAA;;AACD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBH,uBAA7B;AACA,QAAMI,MAAM,GAAGH,KAAK,KAAKE,KAAK,CAACE,MAAN,GAAe,CAAxC;AACA,QAAMC,QAAQ,GAAG,iBAAAH,KAAK,CAAEF,KAAF,CAAL,8DAAgBM,EAAhB,MAAuBL,SAAxC;AACA,QAAMM,YAAY,GAAG,WAAAL,KAAK,CAAEF,KAAK,GAAG,CAAV,CAAL,kDAAoBM,EAApB,MAA2BL,SAAhD;AAEA,MAAIO,aAAa,GAAG,IAApB;;AAEA,MAAKN,KAAK,CAACE,MAAN,GAAe,CAApB,EAAwB;AACvBI,IAAAA,aAAa,GAAG,KAAhB;AACA;;AAED,MAAKH,QAAQ,IAAIE,YAAZ,IAA4BJ,MAAjC,EAA0C;AACzCK,IAAAA,aAAa,GAAG,KAAhB;AACA;;AAED,SAAOA,aAAP;AACA;;AAED,SAASC,sBAAT,CACCC,KADD,EAECC,YAFD,EAGE;AACD,QAAMZ,uBAAuB,GAAG,0DAAhC;AACA,QAAMO,EAAE,GAAG,4BACVG,sBADU,EAEVV,uBAAuB,CAACa,MAAxB,IAAkC,0BAFxB,CAAX;AAIA,QAAMC,WAAW,GAAG,+BACnB,EAAE,GAAGH,KAAL;AAAYJ,IAAAA;AAAZ,GADmB,EAEnB,wBAFmB,CAApB;AAIA,QAAMN,KAAK,GAAGD,uBAAuB,CAACG,KAAxB,CAA8BY,SAA9B,CACXC,IAAF,IAAYA,IAAI,CAACT,EAAL,KAAYO,WAAW,CAACP,EADvB,CAAd;AAGA,QAAME,aAAa,GAAGV,gBAAgB,CAAEC,uBAAF,EAA2BC,KAA3B,CAAtC;AACA,SACC,4BAAC,+BAAD;AACC,IAAA,GAAG,EAAGW;AADP,KAEWZ,uBAFX,EAEuCc,WAFvC;AAEoDL,IAAAA;AAFpD,KADD;AAMA;;eACc,6BACdC,sBADc,EAEd,wBAFc,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport {\n\tcontextConnect,\n\tuseContextSystem,\n\tPolymorphicComponentProps,\n} from '../ui/context';\nimport SegmentedControlButton from './segmented-control-button';\nimport type {\n\tSegmentedControlOptionProps,\n\tSegmentedControlContextProps,\n} from './types';\nimport { useSegmentedControlContext } from './segmented-control-context';\n\nfunction getShowSeparator(\n\tsegmentedControlContext: SegmentedControlContextProps,\n\tindex: number\n) {\n\tconst { currentId, items } = segmentedControlContext;\n\tconst isLast = index === items.length - 1;\n\tconst isActive = items[ index ]?.id === currentId;\n\tconst isNextActive = items[ index + 1 ]?.id === currentId;\n\n\tlet showSeparator = true;\n\n\tif ( items.length < 3 ) {\n\t\tshowSeparator = false;\n\t}\n\n\tif ( isActive || isNextActive || isLast ) {\n\t\tshowSeparator = false;\n\t}\n\n\treturn showSeparator;\n}\n\nfunction SegmentedControlOption(\n\tprops: PolymorphicComponentProps< SegmentedControlOptionProps, 'input' >,\n\tforwardedRef: import('react').Ref< any >\n) {\n\tconst segmentedControlContext = useSegmentedControlContext();\n\tconst id = useInstanceId(\n\t\tSegmentedControlOption,\n\t\tsegmentedControlContext.baseId || 'segmented-control-option'\n\t);\n\tconst buttonProps = useContextSystem(\n\t\t{ ...props, id },\n\t\t'SegmentedControlOption'\n\t);\n\tconst index = segmentedControlContext.items.findIndex(\n\t\t( item ) => item.id === buttonProps.id\n\t);\n\tconst showSeparator = getShowSeparator( segmentedControlContext, index );\n\treturn (\n\t\t<SegmentedControlButton\n\t\t\tref={ forwardedRef }\n\t\t\t{ ...{ ...segmentedControlContext, ...buttonProps, showSeparator } }\n\t\t/>\n\t);\n}\nexport default contextConnect(\n\tSegmentedControlOption,\n\t'SegmentedControlOption'\n);\n"]}