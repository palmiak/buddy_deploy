{"version":3,"sources":["@wordpress/components/src/mobile/inserter-button/index.native.js"],"names":["MenuItem","Component","constructor","arguments","onPress","bind","onSelect","item","props","render","getStylesFromColorScheme","itemWidth","maxWidth","modalIconWrapperStyle","styles","modalIconWrapper","modalIconWrapperDark","modalIconStyle","modalIcon","modalIconDark","modalItemLabelStyle","modalItemLabel","modalItemLabelDark","clipboardBlockStyles","clipboardBlock","clipboardBlockDark","isClipboardBlock","id","blockTitle","title","blockIsNew","isNew","accessibilityLabelFormat","accessibilityLabel","touchableArea","isDisabled","disabled","modalItem","width","sparkles","newIndicator","icon","src","fill","InserterButton","Styles"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, TouchableHighlight, Text } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { Icon } from '@wordpress/components';\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { sparkles } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nclass MenuItem extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onPress = this.onPress.bind( this );\n\t}\n\n\tonPress() {\n\t\tconst { onSelect, item } = this.props;\n\t\tonSelect( item );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tgetStylesFromColorScheme,\n\t\t\titem,\n\t\t\titemWidth,\n\t\t\tmaxWidth,\n\t\t} = this.props;\n\n\t\tconst modalIconWrapperStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIconWrapper,\n\t\t\tstyles.modalIconWrapperDark\n\t\t);\n\t\tconst modalIconStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIcon,\n\t\t\tstyles.modalIconDark\n\t\t);\n\t\tconst modalItemLabelStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalItemLabel,\n\t\t\tstyles.modalItemLabelDark\n\t\t);\n\n\t\tconst clipboardBlockStyles = getStylesFromColorScheme(\n\t\t\tstyles.clipboardBlock,\n\t\t\tstyles.clipboardBlockDark\n\t\t);\n\n\t\tconst isClipboardBlock = item.id === 'clipboard';\n\t\tconst blockTitle = isClipboardBlock ? __( 'Copied block' ) : item.title;\n\t\tconst blockIsNew = item.isNew === true;\n\t\tconst accessibilityLabelFormat = blockIsNew\n\t\t\t? // translators: Newly available block name. %s: The localized block name\n\t\t\t  __( '%s block, newly available' )\n\t\t\t: // translators: Block name. %s: The localized block name\n\t\t\t  __( '%s block' );\n\t\tconst accessibilityLabel = sprintf(\n\t\t\taccessibilityLabelFormat,\n\t\t\titem.title\n\t\t);\n\n\t\treturn (\n\t\t\t<TouchableHighlight\n\t\t\t\tstyle={ [\n\t\t\t\t\tstyles.touchableArea,\n\t\t\t\t\titem.isDisabled ? styles.disabled : null,\n\t\t\t\t] }\n\t\t\t\tunderlayColor=\"transparent\"\n\t\t\t\tactiveOpacity={ 0.5 }\n\t\t\t\taccessibilityRole=\"button\"\n\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t\tonPress={ this.onPress }\n\t\t\t\tdisabled={ item.isDisabled }\n\t\t\t>\n\t\t\t\t<View style={ [ styles.modalItem, { width: maxWidth } ] }>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\tmodalIconWrapperStyle,\n\t\t\t\t\t\t\titemWidth && {\n\t\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tisClipboardBlock && clipboardBlockStyles,\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ blockIsNew && (\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\ticon={ sparkles }\n\t\t\t\t\t\t\t\tstyle={ styles.newIndicator }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<View style={ modalIconStyle }>\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\ticon={ item.icon.src || item.icon }\n\t\t\t\t\t\t\t\tfill={ modalIconStyle.fill }\n\t\t\t\t\t\t\t\tsize={ modalIconStyle.width }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Text numberOfLines={ 3 } style={ modalItemLabelStyle }>\n\t\t\t\t\t\t{ blockTitle }\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableHighlight>\n\t\t);\n\t}\n}\n\nconst InserterButton = withPreferredColorScheme( MenuItem );\n\nInserterButton.Styles = {\n\tmodalItem: styles.modalItem,\n\tmodalIconWrapper: styles.modalIconWrapper,\n};\n\nexport default InserterButton;\n"]}