"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _icons = require("@wordpress/icons");

var _i18n = require("@wordpress/i18n");

var _dropdownMenu = _interopRequireDefault(require("../../dropdown-menu"));

var _menuGroup = _interopRequireDefault(require("../../menu-group"));

var _menuItem = _interopRequireDefault(require("../../menu-item"));

var _hook = require("./hook");

var _context = require("../../ui/context");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const ToolsPanelHeader = (props, forwardedRef) => {
  const {
    hasMenuItems,
    header,
    menuItems,
    menuLabel,
    resetAll,
    toggleItem,
    ...headerProps
  } = (0, _hook.useToolsPanelHeader)(props);

  if (!header) {
    return null;
  }

  return (0, _element.createElement)("h2", (0, _extends2.default)({}, headerProps, {
    ref: forwardedRef
  }), header, hasMenuItems && (0, _element.createElement)(_dropdownMenu.default, {
    icon: _icons.moreHorizontal,
    label: menuLabel
  }, ({
    onClose
  }) => (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_menuGroup.default, {
    label: (0, _i18n.__)('Display options')
  }, Object.entries(menuItems).map(([label, isSelected]) => {
    return (0, _element.createElement)(_menuItem.default, {
      key: label,
      icon: isSelected && _icons.check,
      isSelected: isSelected,
      onClick: () => {
        toggleItem(label);
        onClose();
      },
      role: "menuitemcheckbox"
    }, label);
  })), (0, _element.createElement)(_menuGroup.default, null, (0, _element.createElement)(_menuItem.default, {
    onClick: () => {
      resetAll();
      onClose();
    }
  }, (0, _i18n.__)('Reset all'))))));
};

const ConnectedToolsPanelHeader = (0, _context.contextConnect)(ToolsPanelHeader, 'ToolsPanelHeader');
var _default = ConnectedToolsPanelHeader;
exports.default = _default;
//# sourceMappingURL=component.js.map