"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useToolsPanelItem = useToolsPanelItem;

var _compose = require("@wordpress/compose");

var _element = require("@wordpress/element");

var styles = _interopRequireWildcard(require("../styles"));

var _context = require("../context");

var _context2 = require("../../ui/context");

var _useCx = require("../../utils/hooks/use-cx");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function useToolsPanelItem(props) {
  const {
    className,
    hasValue,
    isShownByDefault,
    label,
    onDeselect = () => undefined,
    onSelect = () => undefined,
    ...otherProps
  } = (0, _context2.useContextSystem)(props, 'ToolsPanelItem');
  const cx = (0, _useCx.useCx)();
  const classes = (0, _element.useMemo)(() => {
    return cx(styles.ToolsPanelItem, className);
  });
  const {
    menuItems,
    registerPanelItem
  } = (0, _context.useToolsPanelContext)(); // Registering the panel item allows the panel to include it in its
  // automatically generated menu and determine its initial checked status.

  (0, _element.useEffect)(() => {
    registerPanelItem({
      hasValue,
      isShownByDefault,
      label
    });
  }, []);
  const isValueSet = hasValue(); // Note: `label` is used as a key when building menu item state in
  // `ToolsPanel`.

  const isMenuItemChecked = menuItems[label];
  const wasMenuItemChecked = (0, _compose.usePrevious)(isMenuItemChecked); // Determine if the panel item's corresponding menu is being toggled and
  // trigger appropriate callback if it is.

  (0, _element.useEffect)(() => {
    if (isMenuItemChecked && !isValueSet && !wasMenuItemChecked) {
      onSelect();
    }

    if (!isMenuItemChecked && wasMenuItemChecked) {
      onDeselect();
    }
  }, [isMenuItemChecked, wasMenuItemChecked, isValueSet]);
  return { ...otherProps,
    isShown: isMenuItemChecked,
    className: classes
  };
}
//# sourceMappingURL=hook.js.map