{"version":3,"sources":["@wordpress/components/src/tools-panel/tools-panel-item/component.js"],"names":["useToolsPanelItem","View","contextConnect","ToolsPanelItem","props","forwardedRef","children","isShown","toolsPanelItemProps","ConnectedToolsPanelItem"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,QAAlC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;AACA;;AACA,MAAMC,cAAc,GAAG,CAAEC,KAAF,EAASC,YAAT,KAA2B;AACjD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqB,OAAGC;AAAxB,MAAgDR,iBAAiB,CACtEI,KADsE,CAAvE;;AAIA,MAAK,CAAEG,OAAP,EAAiB;AAChB,WAAO,IAAP;AACA;;AAED,SACC,cAAC,IAAD,eAAWC,mBAAX;AAAiC,IAAA,GAAG,EAAGH;AAAvC,MACGC,QADH,CADD;AAKA,CAdD;;AAgBA,MAAMG,uBAAuB,GAAGP,cAAc,CAC7CC,cAD6C,EAE7C,gBAF6C,CAA9C;AAKA,eAAeM,uBAAf","sourcesContent":["/**\n * Internal dependencies\n */\nimport { useToolsPanelItem } from './hook';\nimport { View } from '../../view';\nimport { contextConnect } from '../../ui/context';\n\n// This wraps controls to be conditionally displayed within a tools panel. It\n// prevents props being applied to HTML elements that would make them invalid.\nconst ToolsPanelItem = ( props, forwardedRef ) => {\n\tconst { children, isShown, ...toolsPanelItemProps } = useToolsPanelItem(\n\t\tprops\n\t);\n\n\tif ( ! isShown ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<View { ...toolsPanelItemProps } ref={ forwardedRef }>\n\t\t\t{ children }\n\t\t</View>\n\t);\n};\n\nconst ConnectedToolsPanelItem = contextConnect(\n\tToolsPanelItem,\n\t'ToolsPanelItem'\n);\n\nexport default ConnectedToolsPanelItem;\n"]}