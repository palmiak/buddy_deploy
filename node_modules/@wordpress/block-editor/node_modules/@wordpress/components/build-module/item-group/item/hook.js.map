{"version":3,"sources":["@wordpress/components/src/item-group/item/hook.ts"],"names":["useContextSystem","styles","useItemGroupContext","useCx","useItem","props","isAction","as","asProp","className","role","size","sizeProp","otherProps","spacedAround","contextSize","cx","classes","unstyledButton","itemSizes","medium","item","wrapperClassName","itemWrapper"],"mappings":"AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,SAASA,gBAAT,QAA4D,kBAA5D;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,SAASC,mBAAT,QAAoC,YAApC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAGA,OAAO,SAASC,OAAT,CACNC,KADM,EAEL;AACD,QAAM;AACLC,IAAAA,QAAQ,GAAG,KADN;AAELC,IAAAA,EAAE,EAAEC,MAFC;AAGLC,IAAAA,SAHK;AAILC,IAAAA,IAAI,GAAG,UAJF;AAKLC,IAAAA,IAAI,EAAEC,QALD;AAML,OAAGC;AANE,MAOFb,gBAAgB,CAAEK,KAAF,EAAS,MAAT,CAPpB;AASA,QAAM;AAAES,IAAAA,YAAF;AAAgBH,IAAAA,IAAI,EAAEI;AAAtB,MAAsCb,mBAAmB,EAA/D;AAEA,QAAMS,IAAI,GAAGC,QAAQ,IAAIG,WAAzB;AAEA,QAAMR,EAAE,GAAKC,MAAM,IAAIF,QAAV,GAAqB,QAArB,GAAgC,KAA7C;AAEA,QAAMU,EAAE,GAAGb,KAAK,EAAhB;AAEA,QAAMc,OAAO,GAAGD,EAAE,CACjBV,QAAQ,IAAIL,MAAM,CAACiB,cADF,EAEjBjB,MAAM,CAACkB,SAAP,CAAkBR,IAAlB,KAA4BV,MAAM,CAACkB,SAAP,CAAiBC,MAF5B,EAGjBnB,MAAM,CAACoB,IAHU,EAIjBP,YAAY,IAAIb,MAAM,CAACa,YAJN,EAKjBL,SALiB,CAAlB;AAQA,QAAMa,gBAAgB,GAAGN,EAAE,CAAEf,MAAM,CAACsB,WAAT,CAA3B;AAEA,SAAO;AACNhB,IAAAA,EADM;AAENE,IAAAA,SAAS,EAAEQ,OAFL;AAGNK,IAAAA,gBAHM;AAINZ,IAAAA,IAJM;AAKN,OAAGG;AALG,GAAP;AAOA","sourcesContent":["/**\n * External dependencies\n */\n// eslint-disable-next-line no-restricted-imports\nimport type { ElementType } from 'react';\n\n/**\n * Internal dependencies\n */\nimport { useContextSystem, PolymorphicComponentProps } from '../../ui/context';\nimport * as styles from '../styles';\nimport { useItemGroupContext } from '../context';\nimport { useCx } from '../../utils/hooks/use-cx';\nimport type { ItemProps } from '../types';\n\nexport function useItem(\n\tprops: PolymorphicComponentProps< ItemProps, 'div' >\n) {\n\tconst {\n\t\tisAction = false,\n\t\tas: asProp,\n\t\tclassName,\n\t\trole = 'listitem',\n\t\tsize: sizeProp,\n\t\t...otherProps\n\t} = useContextSystem( props, 'Item' );\n\n\tconst { spacedAround, size: contextSize } = useItemGroupContext();\n\n\tconst size = sizeProp || contextSize;\n\n\tconst as = ( asProp || isAction ? 'button' : 'div' ) as ElementType;\n\n\tconst cx = useCx();\n\n\tconst classes = cx(\n\t\tisAction && styles.unstyledButton,\n\t\tstyles.itemSizes[ size ] || styles.itemSizes.medium,\n\t\tstyles.item,\n\t\tspacedAround && styles.spacedAround,\n\t\tclassName\n\t);\n\n\tconst wrapperClassName = cx( styles.itemWrapper );\n\n\treturn {\n\t\tas,\n\t\tclassName: classes,\n\t\twrapperClassName,\n\t\trole,\n\t\t...otherProps,\n\t};\n}\n"]}