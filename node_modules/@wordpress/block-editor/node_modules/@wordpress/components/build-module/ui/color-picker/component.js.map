{"version":3,"sources":["@wordpress/components/src/ui/color-picker/component.tsx"],"names":["useState","moreVertical","useDebounce","__","useContextSystem","contextConnect","HStack","Button","Spacer","ColorfulWrapper","SelectControl","ColorDisplay","ColorInput","Picker","useControlledValue","options","label","value","getSafeColor","color","a","h","s","l","ColorPicker","props","forwardedRef","enableAlpha","colorProp","onChange","defaultValue","copyFormat","setColor","debouncedSetColor","handleChange","nextValue","safeColor","showInputs","setShowInputs","colorType","setColorType","nextColorType","ConnectedColorPicker"],"mappings":";;AAAA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,EAAT,QAAmB,iBAAnB;AAEA;AACA;AACA;;AACA,SACCC,gBADD,EAECC,cAFD,QAIO,YAJP;AAKA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,UAA/C;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AAYA,MAAMC,OAAO,GAAG,CACf;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFe,EAGf;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAHe,CAAhB;;AAMA,MAAMC,YAAY,GACjBC,KADoB,IAEG;AACvB,SAAOA,KAAK,GAAG;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQ,OAAGD;AAAX,GAAH,GAAwB;AAAEE,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE,CAAX;AAAcC,IAAAA,CAAC,EAAE,GAAjB;AAAsBH,IAAAA,CAAC,EAAE;AAAzB,GAApC;AACA,CAJD;;AAMA,MAAMI,WAAW,GAAG,CACnBC,KADmB,EAEnBC,YAFmB,KAGf;AACJ,QAAM;AACLC,IAAAA,WAAW,GAAG,KADT;AAELR,IAAAA,KAAK,EAAES,SAFF;AAGLC,IAAAA,QAHK;AAILC,IAAAA,YAJK;AAKLC,IAAAA;AALK,MAMF3B,gBAAgB,CAAEqB,KAAF,EAAS,aAAT,CANpB;AAQA,QAAM,CAAEN,KAAF,EAASa,QAAT,IAAsBlB,kBAAkB,CAAE;AAC/Ce,IAAAA,QAD+C;AAE/CZ,IAAAA,KAAK,EAAEW,SAFwC;AAG/CE,IAAAA;AAH+C,GAAF,CAA9C,CATI,CAeJ;;AACA,QAAMG,iBAAiB,GAAG/B,WAAW,CAAE8B,QAAF,CAArC;;AAEA,QAAME,YAAY,GACjBC,SADoB,IAEhB;AACJF,IAAAA,iBAAiB,CAAEE,SAAF,CAAjB;AACA,GAJD,CAlBI,CAwBJ;;;AACA,QAAMC,SAAS,GAAGlB,YAAY,CAAEC,KAAF,CAA9B;AAEA,QAAM,CAAEkB,UAAF,EAAcC,aAAd,IAAgCtC,QAAQ,CAAa,KAAb,CAA9C;AACA,QAAM,CAAEuC,SAAF,EAAaC,YAAb,IAA8BxC,QAAQ,CAC3C+B,UAAU,IAAI,KAD6B,CAA5C;AAIA,SACC,cAAC,eAAD;AAAiB,IAAA,GAAG,EAAGL;AAAvB,KACC,cAAC,MAAD;AACC,IAAA,QAAQ,EAAGQ,YADZ;AAEC,IAAA,KAAK,EAAGE,SAFT;AAGC,IAAA,WAAW,EAAGT;AAHf,IADD,EAMC,cAAC,MAAD;AAAQ,IAAA,OAAO,EAAC;AAAhB,KACGU,UAAU,GACX,cAAC,aAAD;AACC,IAAA,OAAO,EAAGtB,OADX;AAEC,IAAA,KAAK,EAAGwB,SAFT;AAGC,IAAA,QAAQ,EAAKE,aAAF,IACVD,YAAY,CAAEC,aAAF,CAJd;AAMC,IAAA,KAAK,EAAGtC,EAAE,CAAE,cAAF,CANX;AAOC,IAAA,mBAAmB;AAPpB,IADW,GAWX,cAAC,YAAD;AACC,IAAA,KAAK,EAAGiC,SADT;AAEC,IAAA,SAAS,EAAGL,UAAU,IAAIQ,SAF3B;AAGC,IAAA,WAAW,EAAGZ;AAHf,IAZF,EAkBC,cAAC,MAAD;AACC,IAAA,OAAO,EAAG,MAAMW,aAAa,CAAE,CAAED,UAAJ,CAD9B;AAEC,IAAA,IAAI,EAAGpC,YAFR;AAGC,IAAA,SAAS,EAAGoC,UAHb;AAIC,IAAA,KAAK,EACJA,UAAU,GACPlC,EAAE,CAAE,sBAAF,CADK,GAEPA,EAAE,CAAE,sBAAF;AAPP,IAlBD,CAND,EAmCC,cAAC,MAAD,OAnCD,EAoCGkC,UAAU,IACX,cAAC,UAAD;AACC,IAAA,SAAS,EAAGE,SADb;AAEC,IAAA,KAAK,EAAGH,SAFT;AAGC,IAAA,QAAQ,EAAGF,YAHZ;AAIC,IAAA,WAAW,EAAGP;AAJf,IArCF,CADD;AA+CA,CAlFD;;AAoFA,MAAMe,oBAAoB,GAAGrC,cAAc,CAAEmB,WAAF,EAAe,aAAf,CAA3C;AAEA,eAAekB,oBAAf","sourcesContent":["/**\n * External dependencies\n */\n// eslint-disable-next-line no-restricted-imports\nimport type { Ref } from 'react';\nimport type { ColorFormats } from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { moreVertical } from '@wordpress/icons';\nimport { useDebounce } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseContextSystem,\n\tcontextConnect,\n\tPolymorphicComponentProps,\n} from '../context';\nimport { HStack } from '../../h-stack';\nimport Button from '../../button';\nimport { Spacer } from '../../spacer';\nimport { ColorfulWrapper, SelectControl } from './styles';\nimport { ColorDisplay } from './color-display';\nimport { ColorInput } from './color-input';\nimport { Picker } from './picker';\nimport { useControlledValue } from '../../utils/hooks';\n\nimport type { ColorType } from './types';\n\ninterface ColorPickerProps {\n\tenableAlpha?: boolean;\n\tcolor?: ColorFormats.HSL | ColorFormats.HSLA;\n\tonChange?: ( color: ColorFormats.HSL | ColorFormats.HSLA ) => void;\n\tdefaultValue?: ColorFormats.HSL | ColorFormats.HSLA;\n\tcopyFormat?: ColorType;\n}\n\nconst options = [\n\t{ label: 'RGB', value: 'rgb' as const },\n\t{ label: 'HSL', value: 'hsl' as const },\n\t{ label: 'Hex', value: 'hex' as const },\n];\n\nconst getSafeColor = (\n\tcolor: ColorFormats.HSL | ColorFormats.HSLA | undefined\n): ColorFormats.HSLA => {\n\treturn color ? { a: 1, ...color } : { h: 0, s: 0, l: 100, a: 1 };\n};\n\nconst ColorPicker = (\n\tprops: PolymorphicComponentProps< ColorPickerProps, 'div', false >,\n\tforwardedRef: Ref< any >\n) => {\n\tconst {\n\t\tenableAlpha = false,\n\t\tcolor: colorProp,\n\t\tonChange,\n\t\tdefaultValue,\n\t\tcopyFormat,\n\t} = useContextSystem( props, 'ColorPicker' );\n\n\tconst [ color, setColor ] = useControlledValue( {\n\t\tonChange,\n\t\tvalue: colorProp,\n\t\tdefaultValue,\n\t} );\n\n\t// Debounce to prevent rapid changes from conflicting with one another.\n\tconst debouncedSetColor = useDebounce( setColor );\n\n\tconst handleChange = (\n\t\tnextValue: ColorFormats.HSLA | ColorFormats.HSL\n\t) => {\n\t\tdebouncedSetColor( nextValue );\n\t};\n\n\t// Use a safe default value for the color and remove the possibility of `undefined`.\n\tconst safeColor = getSafeColor( color );\n\n\tconst [ showInputs, setShowInputs ] = useState< boolean >( false );\n\tconst [ colorType, setColorType ] = useState< ColorType >(\n\t\tcopyFormat || 'hex'\n\t);\n\n\treturn (\n\t\t<ColorfulWrapper ref={ forwardedRef }>\n\t\t\t<Picker\n\t\t\t\tonChange={ handleChange }\n\t\t\t\tcolor={ safeColor }\n\t\t\t\tenableAlpha={ enableAlpha }\n\t\t\t/>\n\t\t\t<HStack justify=\"space-between\">\n\t\t\t\t{ showInputs ? (\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\toptions={ options }\n\t\t\t\t\t\tvalue={ colorType }\n\t\t\t\t\t\tonChange={ ( nextColorType ) =>\n\t\t\t\t\t\t\tsetColorType( nextColorType as ColorType )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={ __( 'Color format' ) }\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<ColorDisplay\n\t\t\t\t\t\tcolor={ safeColor }\n\t\t\t\t\t\tcolorType={ copyFormat || colorType }\n\t\t\t\t\t\tenableAlpha={ enableAlpha }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<Button\n\t\t\t\t\tonClick={ () => setShowInputs( ! showInputs ) }\n\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\tisPressed={ showInputs }\n\t\t\t\t\tlabel={\n\t\t\t\t\t\tshowInputs\n\t\t\t\t\t\t\t? __( 'Hide detailed inputs' )\n\t\t\t\t\t\t\t: __( 'Show detailed inputs' )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</HStack>\n\t\t\t<Spacer />\n\t\t\t{ showInputs && (\n\t\t\t\t<ColorInput\n\t\t\t\t\tcolorType={ colorType }\n\t\t\t\t\tcolor={ safeColor }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tenableAlpha={ enableAlpha }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</ColorfulWrapper>\n\t);\n};\n\nconst ConnectedColorPicker = contextConnect( ColorPicker, 'ColorPicker' );\n\nexport default ConnectedColorPicker;\n"]}