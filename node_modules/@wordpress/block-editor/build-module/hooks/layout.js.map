{"version":3,"sources":["@wordpress/block-editor/src/hooks/layout.js"],"names":["classnames","has","createHigherOrderComponent","useInstanceId","addFilter","getBlockSupport","hasBlockSupport","useSelect","Button","ButtonGroup","ToggleControl","PanelBody","__","useContext","createPortal","store","blockEditorStore","InspectorControls","useSetting","LayoutStyle","Head","getLayoutType","getLayoutTypes","layoutBlockSupportKey","canBlockSwitchLayout","blockTypeOrName","layoutBlockSupportConfig","allowSwitching","LayoutPanel","setAttributes","attributes","name","blockName","layout","defaultLayout","themeSupportsLayout","select","getSettings","supportsLayout","allowLayoutSwitching","inherit","type","layoutType","onChangeType","newType","onChangeLayout","newLayout","LayoutTypeSwitcher","onChange","map","label","addAttribute","settings","withInspectorControls","BlockEdit","props","supportLayout","withLayoutStyles","BlockListBlock","id","usedLayout","className","element","context"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { has } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent, useInstanceId } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tButton,\n\tButtonGroup,\n\tToggleControl,\n\tPanelBody,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useContext, createPortal } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\nimport { InspectorControls } from '../components';\nimport useSetting from '../components/use-setting';\nimport { LayoutStyle } from '../components/block-list/layout';\nimport { Head } from '../components/block-list/head';\nimport { getLayoutType, getLayoutTypes } from '../layouts';\n\nconst layoutBlockSupportKey = '__experimentalLayout';\n\nconst canBlockSwitchLayout = ( blockTypeOrName ) => {\n\tconst layoutBlockSupportConfig = getBlockSupport(\n\t\tblockTypeOrName,\n\t\tlayoutBlockSupportKey\n\t);\n\n\treturn layoutBlockSupportConfig?.allowSwitching;\n};\n\nfunction LayoutPanel( { setAttributes, attributes, name: blockName } ) {\n\tconst { layout = {} } = attributes;\n\tconst defaultLayout = useSetting( 'layout' );\n\tconst themeSupportsLayout = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings().supportsLayout;\n\t}, [] );\n\n\tif ( ! themeSupportsLayout ) {\n\t\treturn null;\n\t}\n\n\tconst allowLayoutSwitching = canBlockSwitchLayout( blockName );\n\tconst { inherit = false, type = 'default' } = layout;\n\tconst layoutType = getLayoutType( type );\n\n\tconst onChangeType = ( newType ) =>\n\t\tsetAttributes( { layout: { type: newType } } );\n\tconst onChangeLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: newLayout } );\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Layout' ) }>\n\t\t\t\t{ !! defaultLayout && (\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Inherit default layout' ) }\n\t\t\t\t\t\tchecked={ !! inherit }\n\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\tsetAttributes( { layout: { inherit: ! inherit } } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t{ ! inherit && allowLayoutSwitching && (\n\t\t\t\t\t<LayoutTypeSwitcher\n\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\tonChange={ onChangeType }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t{ ! inherit && layoutType && (\n\t\t\t\t\t<layoutType.edit\n\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n\nfunction LayoutTypeSwitcher( { type, onChange } ) {\n\treturn (\n\t\t<ButtonGroup>\n\t\t\t{ getLayoutTypes().map( ( { name, label } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={ name }\n\t\t\t\t\t\tisPressed={ type === name }\n\t\t\t\t\t\tonClick={ () => onChange( name ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label }\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</ButtonGroup>\n\t);\n}\n\n/**\n * Filters registered block settings, extending attributes to include `layout`.\n *\n * @param {Object} settings Original block settings.\n *\n * @return {Object} Filtered block settings.\n */\nexport function addAttribute( settings ) {\n\tif ( has( settings.attributes, [ 'layout', 'type' ] ) ) {\n\t\treturn settings;\n\t}\n\tif ( hasBlockSupport( settings, layoutBlockSupportKey ) ) {\n\t\tsettings.attributes = {\n\t\t\t...settings.attributes,\n\t\t\tlayout: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t};\n\t}\n\n\treturn settings;\n}\n\n/**\n * Override the default edit UI to include layout controls\n *\n * @param {Function} BlockEdit Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withInspectorControls = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst { name: blockName } = props;\n\t\tconst supportLayout = hasBlockSupport(\n\t\t\tblockName,\n\t\t\tlayoutBlockSupportKey\n\t\t);\n\n\t\treturn [\n\t\t\tsupportLayout && <LayoutPanel key=\"layout\" { ...props } />,\n\t\t\t<BlockEdit key=\"edit\" { ...props } />,\n\t\t];\n\t},\n\t'withInspectorControls'\n);\n\n/**\n * Override the default block element to add the layout styles.\n *\n * @param {Function} BlockListBlock Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withLayoutStyles = createHigherOrderComponent(\n\t( BlockListBlock ) => ( props ) => {\n\t\tconst { name, attributes } = props;\n\t\tconst supportLayout = hasBlockSupport( name, layoutBlockSupportKey );\n\t\tconst id = useInstanceId( BlockListBlock );\n\t\tconst defaultLayout = useSetting( 'layout' ) || {};\n\t\tif ( ! supportLayout ) {\n\t\t\treturn <BlockListBlock { ...props } />;\n\t\t}\n\t\tconst { layout = {} } = attributes;\n\t\tconst usedLayout = !! layout && layout.inherit ? defaultLayout : layout;\n\t\tconst className = classnames(\n\t\t\tprops?.className,\n\t\t\t`wp-container-${ id }`\n\t\t);\n\n\t\tconst element = useContext( Head.context );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ element &&\n\t\t\t\t\tcreatePortal(\n\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\tselector={ `.wp-container-${ id }` }\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\telement\n\t\t\t\t\t) }\n\t\t\t\t<BlockListBlock { ...props } className={ className } />\n\t\t\t</>\n\t\t);\n\t}\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/layout/addAttribute',\n\taddAttribute\n);\naddFilter(\n\t'editor.BlockListBlock',\n\t'core/editor/layout/with-layout-styles',\n\twithLayoutStyles\n);\naddFilter(\n\t'editor.BlockEdit',\n\t'core/editor/layout/with-inspector-controls',\n\twithInspectorControls\n);\n"]}