{"version":3,"sources":["@wordpress/block-editor/src/hooks/dimensions.js"],"names":["__experimentalToolsPanel","ToolsPanel","__experimentalToolsPanelItem","ToolsPanelItem","Platform","__","getBlockSupport","InspectorControls","MarginEdit","hasMarginSupport","hasMarginValue","resetMargin","useIsMarginDisabled","PaddingEdit","hasPaddingSupport","hasPaddingValue","resetPadding","useIsPaddingDisabled","cleanEmptyObject","SPACING_SUPPORT_KEY","DimensionsPanel","props","isPaddingDisabled","isMarginDisabled","isDisabled","useIsDimensionsDisabled","isSupported","hasDimensionsSupport","name","defaultSpacingControls","resetAll","style","attributes","setAttributes","spacing","margin","undefined","padding","blockName","OS","paddingDisabled","marginDisabled","useCustomSides","feature","support"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalToolsPanel as ToolsPanel,\n\t__experimentalToolsPanelItem as ToolsPanelItem,\n} from '@wordpress/components';\nimport { Platform } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { getBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport InspectorControls from '../components/inspector-controls';\nimport {\n\tMarginEdit,\n\thasMarginSupport,\n\thasMarginValue,\n\tresetMargin,\n\tuseIsMarginDisabled,\n} from './margin';\nimport {\n\tPaddingEdit,\n\thasPaddingSupport,\n\thasPaddingValue,\n\tresetPadding,\n\tuseIsPaddingDisabled,\n} from './padding';\nimport { cleanEmptyObject } from './utils';\n\nexport const SPACING_SUPPORT_KEY = 'spacing';\n\n/**\n * Inspector controls for dimensions support.\n *\n * @param {Object} props Block props.\n *\n * @return {WPElement} Inspector controls for spacing support features.\n */\nexport function DimensionsPanel( props ) {\n\tconst isPaddingDisabled = useIsPaddingDisabled( props );\n\tconst isMarginDisabled = useIsMarginDisabled( props );\n\tconst isDisabled = useIsDimensionsDisabled( props );\n\tconst isSupported = hasDimensionsSupport( props.name );\n\n\tif ( isDisabled || ! isSupported ) {\n\t\treturn null;\n\t}\n\n\tconst defaultSpacingControls = getBlockSupport( props.name, [\n\t\tSPACING_SUPPORT_KEY,\n\t\t'__experimentalDefaultControls',\n\t] );\n\n\t// Callback to reset all block support attributes controlled via this panel.\n\tconst resetAll = () => {\n\t\tconst { style } = props.attributes;\n\n\t\tprops.setAttributes( {\n\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t...style,\n\t\t\t\tspacing: {\n\t\t\t\t\t...style?.spacing,\n\t\t\t\t\tmargin: undefined,\n\t\t\t\t\tpadding: undefined,\n\t\t\t\t},\n\t\t\t} ),\n\t\t} );\n\t};\n\n\treturn (\n\t\t<InspectorControls key=\"dimensions\">\n\t\t\t<ToolsPanel\n\t\t\t\tlabel={ __( 'Dimensions options' ) }\n\t\t\t\theader={ __( 'Dimensions' ) }\n\t\t\t\tresetAll={ resetAll }\n\t\t\t>\n\t\t\t\t{ ! isPaddingDisabled && (\n\t\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t\thasValue={ () => hasPaddingValue( props ) }\n\t\t\t\t\t\tlabel={ __( 'Padding' ) }\n\t\t\t\t\t\tonDeselect={ () => resetPadding( props ) }\n\t\t\t\t\t\tisShownByDefault={ defaultSpacingControls?.padding }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PaddingEdit { ...props } />\n\t\t\t\t\t</ToolsPanelItem>\n\t\t\t\t) }\n\t\t\t\t{ ! isMarginDisabled && (\n\t\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t\thasValue={ () => hasMarginValue( props ) }\n\t\t\t\t\t\tlabel={ __( 'Margin' ) }\n\t\t\t\t\t\tonDeselect={ () => resetMargin( props ) }\n\t\t\t\t\t\tisShownByDefault={ defaultSpacingControls?.margin }\n\t\t\t\t\t>\n\t\t\t\t\t\t<MarginEdit { ...props } />\n\t\t\t\t\t</ToolsPanelItem>\n\t\t\t\t) }\n\t\t\t</ToolsPanel>\n\t\t</InspectorControls>\n\t);\n}\n\n/**\n * Determine whether there is dimensions related block support.\n *\n * @param {string} blockName Block name.\n *\n * @return {boolean} Whether there is support.\n */\nexport function hasDimensionsSupport( blockName ) {\n\tif ( Platform.OS !== 'web' ) {\n\t\treturn false;\n\t}\n\n\treturn hasPaddingSupport( blockName ) || hasMarginSupport( blockName );\n}\n\n/**\n * Determines whether dimensions support has been disabled.\n *\n * @param {Object} props Block properties.\n *\n * @return {boolean} If spacing support is completely disabled.\n */\nconst useIsDimensionsDisabled = ( props = {} ) => {\n\tconst paddingDisabled = useIsPaddingDisabled( props );\n\tconst marginDisabled = useIsMarginDisabled( props );\n\n\treturn paddingDisabled && marginDisabled;\n};\n\n/**\n * Custom hook to retrieve which padding/margin is supported\n * e.g. top, right, bottom or left.\n *\n * Sides are opted into by default. It is only if a specific side is set to\n * false that it is omitted.\n *\n * @param {string} blockName Block name.\n * @param {string} feature   The feature custom sides relate to e.g. padding or margins.\n *\n * @return {Object} Sides supporting custom margin.\n */\nexport function useCustomSides( blockName, feature ) {\n\tconst support = getBlockSupport( blockName, SPACING_SUPPORT_KEY );\n\n\t// Skip when setting is boolean as theme isn't setting arbitrary sides.\n\tif ( typeof support[ feature ] === 'boolean' ) {\n\t\treturn;\n\t}\n\n\treturn support[ feature ];\n}\n"]}